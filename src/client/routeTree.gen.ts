/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WealthInvestmentImport } from './routes/wealth-investment'
import { Route as UserpageImport } from './routes/userpage'
import { Route as SignupImport } from './routes/signup'
import { Route as SearchImport } from './routes/search'
import { Route as SavingsImport } from './routes/savings'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as ProjectFinanceImport } from './routes/project-finance'
import { Route as PersonalLoansImport } from './routes/personal-loans'
import { Route as LoginImport } from './routes/login'
import { Route as CryptoConnectImport } from './routes/crypto-connect'
import { Route as AuthedImport } from './routes/authed'
import { Route as AboutImport } from './routes/about'
import { Route as ProfileRouteImport } from './routes/profile/route'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as ProfileSettingsImport } from './routes/profile/settings'
import { Route as ProfileSecurityImport } from './routes/profile/security'
import { Route as ProfileDashboardImport } from './routes/profile/dashboard'
import { Route as UsersUsernameIdImport } from './routes/users/$username/$id'

// Create/Update Routes

const WealthInvestmentRoute = WealthInvestmentImport.update({
  id: '/wealth-investment',
  path: '/wealth-investment',
  getParentRoute: () => rootRoute,
} as any)

const UserpageRoute = UserpageImport.update({
  id: '/userpage',
  path: '/userpage',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SearchRoute = SearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const SavingsRoute = SavingsImport.update({
  id: '/savings',
  path: '/savings',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const ProjectFinanceRoute = ProjectFinanceImport.update({
  id: '/project-finance',
  path: '/project-finance',
  getParentRoute: () => rootRoute,
} as any)

const PersonalLoansRoute = PersonalLoansImport.update({
  id: '/personal-loans',
  path: '/personal-loans',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CryptoConnectRoute = CryptoConnectImport.update({
  id: '/crypto-connect',
  path: '/crypto-connect',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/authed',
  path: '/authed',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRouteRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProfileRouteRoute,
} as any)

const ProfileSettingsRoute = ProfileSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => ProfileRouteRoute,
} as any)

const ProfileSecurityRoute = ProfileSecurityImport.update({
  id: '/security',
  path: '/security',
  getParentRoute: () => ProfileRouteRoute,
} as any)

const ProfileDashboardRoute = ProfileDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ProfileRouteRoute,
} as any)

const UsersUsernameIdRoute = UsersUsernameIdImport.update({
  id: '/users/$username/$id',
  path: '/users/$username/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/authed': {
      id: '/authed'
      path: '/authed'
      fullPath: '/authed'
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/crypto-connect': {
      id: '/crypto-connect'
      path: '/crypto-connect'
      fullPath: '/crypto-connect'
      preLoaderRoute: typeof CryptoConnectImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/personal-loans': {
      id: '/personal-loans'
      path: '/personal-loans'
      fullPath: '/personal-loans'
      preLoaderRoute: typeof PersonalLoansImport
      parentRoute: typeof rootRoute
    }
    '/project-finance': {
      id: '/project-finance'
      path: '/project-finance'
      fullPath: '/project-finance'
      preLoaderRoute: typeof ProjectFinanceImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/savings': {
      id: '/savings'
      path: '/savings'
      fullPath: '/savings'
      preLoaderRoute: typeof SavingsImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/userpage': {
      id: '/userpage'
      path: '/userpage'
      fullPath: '/userpage'
      preLoaderRoute: typeof UserpageImport
      parentRoute: typeof rootRoute
    }
    '/wealth-investment': {
      id: '/wealth-investment'
      path: '/wealth-investment'
      fullPath: '/wealth-investment'
      preLoaderRoute: typeof WealthInvestmentImport
      parentRoute: typeof rootRoute
    }
    '/profile/dashboard': {
      id: '/profile/dashboard'
      path: '/dashboard'
      fullPath: '/profile/dashboard'
      preLoaderRoute: typeof ProfileDashboardImport
      parentRoute: typeof ProfileRouteImport
    }
    '/profile/security': {
      id: '/profile/security'
      path: '/security'
      fullPath: '/profile/security'
      preLoaderRoute: typeof ProfileSecurityImport
      parentRoute: typeof ProfileRouteImport
    }
    '/profile/settings': {
      id: '/profile/settings'
      path: '/settings'
      fullPath: '/profile/settings'
      preLoaderRoute: typeof ProfileSettingsImport
      parentRoute: typeof ProfileRouteImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof ProfileRouteImport
    }
    '/users/$username/$id': {
      id: '/users/$username/$id'
      path: '/users/$username/$id'
      fullPath: '/users/$username/$id'
      preLoaderRoute: typeof UsersUsernameIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface ProfileRouteRouteChildren {
  ProfileDashboardRoute: typeof ProfileDashboardRoute
  ProfileSecurityRoute: typeof ProfileSecurityRoute
  ProfileSettingsRoute: typeof ProfileSettingsRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
}

const ProfileRouteRouteChildren: ProfileRouteRouteChildren = {
  ProfileDashboardRoute: ProfileDashboardRoute,
  ProfileSecurityRoute: ProfileSecurityRoute,
  ProfileSettingsRoute: ProfileSettingsRoute,
  ProfileIndexRoute: ProfileIndexRoute,
}

const ProfileRouteRouteWithChildren = ProfileRouteRoute._addFileChildren(
  ProfileRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/authed': typeof AuthedRoute
  '/crypto-connect': typeof CryptoConnectRoute
  '/login': typeof LoginRoute
  '/personal-loans': typeof PersonalLoansRoute
  '/project-finance': typeof ProjectFinanceRoute
  '/reset-password': typeof ResetPasswordRoute
  '/savings': typeof SavingsRoute
  '/search': typeof SearchRoute
  '/signup': typeof SignupRoute
  '/userpage': typeof UserpageRoute
  '/wealth-investment': typeof WealthInvestmentRoute
  '/profile/dashboard': typeof ProfileDashboardRoute
  '/profile/security': typeof ProfileSecurityRoute
  '/profile/settings': typeof ProfileSettingsRoute
  '/profile/': typeof ProfileIndexRoute
  '/users/$username/$id': typeof UsersUsernameIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/authed': typeof AuthedRoute
  '/crypto-connect': typeof CryptoConnectRoute
  '/login': typeof LoginRoute
  '/personal-loans': typeof PersonalLoansRoute
  '/project-finance': typeof ProjectFinanceRoute
  '/reset-password': typeof ResetPasswordRoute
  '/savings': typeof SavingsRoute
  '/search': typeof SearchRoute
  '/signup': typeof SignupRoute
  '/userpage': typeof UserpageRoute
  '/wealth-investment': typeof WealthInvestmentRoute
  '/profile/dashboard': typeof ProfileDashboardRoute
  '/profile/security': typeof ProfileSecurityRoute
  '/profile/settings': typeof ProfileSettingsRoute
  '/profile': typeof ProfileIndexRoute
  '/users/$username/$id': typeof UsersUsernameIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/profile': typeof ProfileRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/authed': typeof AuthedRoute
  '/crypto-connect': typeof CryptoConnectRoute
  '/login': typeof LoginRoute
  '/personal-loans': typeof PersonalLoansRoute
  '/project-finance': typeof ProjectFinanceRoute
  '/reset-password': typeof ResetPasswordRoute
  '/savings': typeof SavingsRoute
  '/search': typeof SearchRoute
  '/signup': typeof SignupRoute
  '/userpage': typeof UserpageRoute
  '/wealth-investment': typeof WealthInvestmentRoute
  '/profile/dashboard': typeof ProfileDashboardRoute
  '/profile/security': typeof ProfileSecurityRoute
  '/profile/settings': typeof ProfileSettingsRoute
  '/profile/': typeof ProfileIndexRoute
  '/users/$username/$id': typeof UsersUsernameIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/about'
    | '/authed'
    | '/crypto-connect'
    | '/login'
    | '/personal-loans'
    | '/project-finance'
    | '/reset-password'
    | '/savings'
    | '/search'
    | '/signup'
    | '/userpage'
    | '/wealth-investment'
    | '/profile/dashboard'
    | '/profile/security'
    | '/profile/settings'
    | '/profile/'
    | '/users/$username/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/authed'
    | '/crypto-connect'
    | '/login'
    | '/personal-loans'
    | '/project-finance'
    | '/reset-password'
    | '/savings'
    | '/search'
    | '/signup'
    | '/userpage'
    | '/wealth-investment'
    | '/profile/dashboard'
    | '/profile/security'
    | '/profile/settings'
    | '/profile'
    | '/users/$username/$id'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/about'
    | '/authed'
    | '/crypto-connect'
    | '/login'
    | '/personal-loans'
    | '/project-finance'
    | '/reset-password'
    | '/savings'
    | '/search'
    | '/signup'
    | '/userpage'
    | '/wealth-investment'
    | '/profile/dashboard'
    | '/profile/security'
    | '/profile/settings'
    | '/profile/'
    | '/users/$username/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRouteRoute: typeof ProfileRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  AuthedRoute: typeof AuthedRoute
  CryptoConnectRoute: typeof CryptoConnectRoute
  LoginRoute: typeof LoginRoute
  PersonalLoansRoute: typeof PersonalLoansRoute
  ProjectFinanceRoute: typeof ProjectFinanceRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SavingsRoute: typeof SavingsRoute
  SearchRoute: typeof SearchRoute
  SignupRoute: typeof SignupRoute
  UserpageRoute: typeof UserpageRoute
  WealthInvestmentRoute: typeof WealthInvestmentRoute
  UsersUsernameIdRoute: typeof UsersUsernameIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRouteRoute: ProfileRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  AuthedRoute: AuthedRoute,
  CryptoConnectRoute: CryptoConnectRoute,
  LoginRoute: LoginRoute,
  PersonalLoansRoute: PersonalLoansRoute,
  ProjectFinanceRoute: ProjectFinanceRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SavingsRoute: SavingsRoute,
  SearchRoute: SearchRoute,
  SignupRoute: SignupRoute,
  UserpageRoute: UserpageRoute,
  WealthInvestmentRoute: WealthInvestmentRoute,
  UsersUsernameIdRoute: UsersUsernameIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/profile",
        "/about",
        "/authed",
        "/crypto-connect",
        "/login",
        "/personal-loans",
        "/project-finance",
        "/reset-password",
        "/savings",
        "/search",
        "/signup",
        "/userpage",
        "/wealth-investment",
        "/users/$username/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/profile": {
      "filePath": "profile/route.tsx",
      "children": [
        "/profile/dashboard",
        "/profile/security",
        "/profile/settings",
        "/profile/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/authed": {
      "filePath": "authed.tsx"
    },
    "/crypto-connect": {
      "filePath": "crypto-connect.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/personal-loans": {
      "filePath": "personal-loans.tsx"
    },
    "/project-finance": {
      "filePath": "project-finance.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/savings": {
      "filePath": "savings.tsx"
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/userpage": {
      "filePath": "userpage.tsx"
    },
    "/wealth-investment": {
      "filePath": "wealth-investment.tsx"
    },
    "/profile/dashboard": {
      "filePath": "profile/dashboard.tsx",
      "parent": "/profile"
    },
    "/profile/security": {
      "filePath": "profile/security.tsx",
      "parent": "/profile"
    },
    "/profile/settings": {
      "filePath": "profile/settings.tsx",
      "parent": "/profile"
    },
    "/profile/": {
      "filePath": "profile/index.tsx",
      "parent": "/profile"
    },
    "/users/$username/$id": {
      "filePath": "users/$username/$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
